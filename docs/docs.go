// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `
{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "go-wa-rest",
    "description": "go-wa-rest API Documentation",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "Swagger API Team"
    },
    "license": {
      "name": "MIT"
    }
  },
  "host": "localhost:8080",
  "basePath": "/apis",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
      {
          "name": "Auth",
          "description": "Operations about auth"
      },
      {
          "name": "Seller",
          "description": "Operations about seller"
      },
      {
          "name": "Buyer",
          "description": "Operations about buyer"
      }
  ],
  "paths": {
    "/v1/user/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "User login",
        "operationId": "userLogin",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
              "name": "body",
              "in": "body",
              "description": "User login request",
              "required": true,
              "schema": {
                  "$ref": "#/definitions/NewUserLogin"
              }
          }
        ],
        "responses": {
          "200": {
            "description": "User login response",
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/v1/seller/product/list": {
      "get": {
        "tags": [
          "Seller"
        ],
        "description": "Seller product list",
        "operationId": "sellerProductList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "type": "string",
              "default": "Bearer eyJhbGciOiJIU"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Seller product list response",
            "schema": {
              "$ref": "#/definitions/ProductList"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/v1/seller/product/save": {
      "post": {
        "tags": [
          "Seller"
        ],
        "description": "Seller create product",
        "operationId": "sellerCreateProduct",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "type": "string",
              "default": "Bearer eyJhbGciOiJIU"
          },
          {
              "name": "body",
              "in": "body",
              "description": "Seller create product request",
              "required": true,
              "schema": {
                  "$ref": "#/definitions/NewSellerProduct"
              }
          }
        ],
        "responses": {
          "200": {
            "description": "Seller create product response",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/v1/seller/order/list": {
      "get": {
        "tags": [
          "Seller"
        ],
        "description": "Seller order list",
        "operationId": "sellerOrderList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "type": "string",
              "default": "Bearer eyJhbGciOiJIU"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Seller order list response",
            "schema": {
              "$ref": "#/definitions/OrderList"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/v1/seller/order/{orderId}": {
      "put": {
        "tags": [
          "Seller"
        ],
        "description": "Seller accepted order",
        "operationId": "sellerAcceptedOrder",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "type": "string",
              "default": "Bearer eyJhbGciOiJIU"
          },
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "default": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Seller accepted order response",
            "schema": {
              "$ref": "#/definitions/OrderUpdate"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/v1/buyer/product/list": {
      "get": {
        "tags": [
          "Buyer"
        ],
        "description": "Buyer product list",
        "operationId": "buyerProductList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "type": "string",
              "default": "Bearer eyJhbGciOiJIU"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Buyer product list response",
            "schema": {
              "$ref": "#/definitions/ProductList"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/v1/buyer/order/save": {
      "post": {
        "tags": [
          "Buyer"
        ],
        "description": "Buyer order product",
        "operationId": "buyerOrderProduct",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "type": "string",
              "default": "Bearer eyJhbGciOiJIU"
          },
          {
              "name": "body",
              "in": "body",
              "description": "Buyer order product request",
              "required": true,
              "schema": {
                  "$ref": "#/definitions/NewBuyerOrder"
              }
          }
        ],
        "responses": {
          "200": {
            "description": "Buyer order product response",
            "schema": {
              "$ref": "#/definitions/OrderCreate"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },
    "/v1/buyer/order/list": {
      "get": {
        "tags": [
          "Buyer"
        ],
        "description": "Buyer order list",
        "operationId": "buyerOrderList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
              "name": "Authorization",
              "in": "header",
              "required": true,
              "type": "string",
              "default": "Bearer eyJhbGciOiJIU"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Buyer order list response",
            "schema": {
              "$ref": "#/definitions/OrderList"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "NewUserLogin": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "default": "seller@email.com"
        },
        "password": {
          "type": "string",
          "default": "qweasd123"
        }
      }
    },
    "UserLogin": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "Success"
        },
        "data": {
          "$ref": "#/definitions/UserLoginModel"
        }
      }
    },
    "UserLoginModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "uuid"
        },
        "email": {
          "type": "string",
          "example": "root"
        },
        "token": {
          "type": "string",
          "example": "token"
        }
      }
    },
    "UserProperty": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "uuid"
        },
        "email": {
          "type": "string",
          "example": "name"
        },
        "name": {
          "type": "string",
          "example": "description"
        },
        "address": {
          "type": "string",
          "example": "address"
        }
      }
    },
    "NewSellerProduct": {
      "type": "object",
      "required": [
        "name",
        "description",
        "price"
      ],
      "properties": {
        "name": {
          "type": "string",
          "default": "Sabun Dettol"
        },
        "description": {
          "type": "string",
          "default": "Sabun cair untuk mandi"
        },
        "price": {
          "type": "integer",
          "default": 20000
        }
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "example": 201
        },
        "message": {
          "type": "string",
          "example": "Success"
        },
        "data": {
          "$ref": "#/definitions/ProductProperty"
        }
      }
    },
    "ProductList": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "Success"
        },
        "data": {
          "$ref": "#/definitions/ProductListModel"
        }
      }
    },
    "ProductListModel": {
      "type": "object",
      "properties": {
        "products": {
          "type": "array",
          "items": {
              "$ref": "#/definitions/ProductProperty"
          }
        },
        "count": {
          "type": "integer",
          "example": 1
        }
      }
    },
    "ProductProperty": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "uuid"
        },
        "name": {
          "type": "string",
          "example": "name"
        },
        "description": {
          "type": "string",
          "example": "description"
        },
        "price": {
          "type": "integer",
          "example": 10000
        },
        "createdAt": {
          "type": "string",
          "example": "createdAt"
        },
        "updatedAt": {
          "type": "string",
          "example": "updatedAt"
        }
      }
    },
    "NewBuyerOrder": {
      "type": "object",
      "required": [
        "productId",
        "qty"
      ],
      "properties": {
        "productId": {
          "type": "string",
          "default": "uuid"
        },
        "qty": {
          "type": "integer",
          "default": 10
        }
      }
    },
    "OrderUpdate": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "example": 201
        },
        "message": {
          "type": "string",
          "example": "Success"
        },
        "data": {
          "$ref": "#/definitions/OrderProperty"
        }
      }
    },
    "OrderList": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "Success"
        },
        "data": {
          "$ref": "#/definitions/OrderListModel"
        }
      }
    },
    "OrderListModel": {
      "type": "object",
      "properties": {
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderProperty"
          }
        },
        "count": {
          "type": "integer",
          "example": 1
        }
      }
    },
    "OrderProperty": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "uuid"
        },
        "buyer": {
          "$ref": "#/definitions/UserProperty"
        },
        "seller": {
          "$ref": "#/definitions/UserProperty"
        },
        "product": {
          "$ref": "#/definitions/ProductProperty"
        },
        "qty": {
          "type": "integer",
          "example": 10
        },
        "totalPrice": {
          "type": "integer",
          "example": 100000
        },
        "status": {
          "type": "string",
          "example": "PENDING"
        },
        "createdAt": {
          "type": "string",
          "example": "createdAt"
        },
        "updatedAt": {
          "type": "string",
          "example": "updatedAt"
        }
      }
    },
    "OrderCreate": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "example": 201
        },
        "message": {
          "type": "string",
          "example": "Success"
        },
        "data": {
          "$ref": "#/definitions/OrderCreateProperty"
        }
      }
    },
    "OrderCreateProperty": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "uuid"
        },
        "buyerId": {
          "type": "string",
          "example": "uuid"
        },
        "sellerId": {
          "type": "string",
          "example": "uuid"
        },
        "productId": {
          "type": "string",
          "example": "uuid"
        },
        "qty": {
          "type": "integer",
          "example": 10
        },
        "totalPrice": {
          "type": "integer",
          "example": 100000
        },
        "status": {
          "type": "string",
          "example": "ACCEPTED"
        },
        "createdAt": {
          "type": "string",
          "example": "createdAt"
        },
        "updatedAt": {
          "type": "string",
          "example": "updatedAt"
        }
      }
    },
    "ErrorModel": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}
`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
